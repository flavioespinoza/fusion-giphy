{"version":3,"file":"main.1e6b0ce1e49bdd7babcb.hot-update.js","sources":["/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/pages/giphy.js"],"sourcesContent":["// @flow\nimport React, {useContext, useState} from 'react';\nimport {styled} from 'fusion-plugin-styletron-react';\nimport {\n  Grid, // our UI Component to display the results\n  SearchBar, // the search bar the user will type into\n  SearchContext, // the context that wraps and connects our components\n  SearchContextManager, // the context manager, includes the Context.Provider\n} from '@giphy/react-components';\nimport ResizeObserver from 'react-resize-observer';\nimport '@fortawesome/fontawesome-pro/js/all.js';\n\nconst FullHeightDiv = styled('div', {\n  height: '100%',\n  backgroundColor: '#131313',\n});\n\nconst SearchDiv = styled('div', {\n  display: 'grid',\n  gridTemplateColumns: '9fr 1fr 1fr 1fr',\n});\n\nconst ButtonIcon = styled('button', {\n  backgroundColor: 'transparent',\n  border: 'none',\n  cursor: 'pointer',\n});\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n  const {fetchGifs, searchKey} = useContext(SearchContext);\n  // eslint-disable-next-line cup/no-undef\n  const [width, setWidth] = useState(window.innerWidth);\n  const [columns, setColumns] = useState(1);\n  return (\n    <FullHeightDiv>\n      <SearchDiv>\n        <SearchBar />\n        <ButtonIcon\n          onClick={() => setColumns(1)}\n          style={{color: columns === 1 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th-list fa-lg\"></i>\n        </ButtonIcon>\n        <ButtonIcon\n          onClick={() => setColumns(2)}\n          style={{color: columns === 2 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th-large fa-lg\"></i>\n        </ButtonIcon>\n        <ButtonIcon\n          onClick={() => setColumns(3)}\n          style={{color: columns === 3 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th fa-lg\"></i>\n        </ButtonIcon>\n      </SearchDiv>\n      <Grid\n        key={searchKey}\n        fetchGifs={fetchGifs}\n        width={width}\n        columns={columns}\n        gutter={6}\n      />\n      <ResizeObserver\n        onResize={({width}) => {\n          setWidth(width);\n        }}\n      />\n    </FullHeightDiv>\n  );\n};\n\n// the search experience consists of the manager and its child components that use SearchContext\nconst GiphySearch = props => {\n  return (\n    <SearchContextManager apiKey={'CdRKiCMbTnt9CkZTZ0lGukSczk6iT4Z6'}>\n      <Components />\n    </SearchContextManager>\n  );\n};\n\nexport default GiphySearch;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAHA;AAOA;AACA;AARA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}