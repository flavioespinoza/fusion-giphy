{"version":3,"file":"client-main.js","sources":["/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/main.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/pages/giphy.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/pages/pageNotFound.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/root.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/ignored /Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/node_modules/side-channel/node_modules/object-inspect ./util.inspect"],"sourcesContent":["// @flow\nimport App from 'fusion-react';\nimport Router from 'fusion-plugin-react-router';\nimport Styletron from 'fusion-plugin-styletron-react';\nimport {RenderToken} from 'fusion-core';\nimport '@fortawesome/fontawesome-pro/js/all.js';\n\nimport root from './root.js';\n\nexport default () => {\n  const app = new App(root);\n  app.register(Styletron);\n  app.register(Router);\n  __NODE__ && app.register(RenderToken, () => '<div id=\"root\"></div>');\n  return app;\n};\n","// @flow\nimport React, {useContext, useState} from 'react';\nimport {styled} from 'fusion-plugin-styletron-react';\nimport {\n  Grid, // our UI Component to display the results\n  SearchBar, // the search bar the user will type into\n  SearchContext, // the context that wraps and connects our components\n  SearchContextManager, // the context manager, includes the Context.Provider\n} from '@giphy/react-components';\nimport ResizeObserver from 'react-resize-observer';\n\nconst FullHeightDiv = styled('div', {\n  height: '100%',\n  backgroundColor: '#FFFFFF',\n});\n\nconst SearchDiv = styled('div', {\n  display: 'grid',\n  gridTemplateColumns: '30px 8fr 1fr 1fr 1fr',\n  border: '1px solid gainsboro',\n  marginBottom: '8px',\n});\n\nconst ButtonIcon = styled('button', {\n  backgroundColor: 'transparent',\n  border: 'none',\n  cursor: 'pointer',\n});\n\nconst ButtonIconClose = styled('button', {\n  backgroundColor: 'transparent',\n  border: 'none',\n  cursor: 'pointer',\n  marginRight: '-12px',\n});\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n  const {setSearch, fetchGifs, searchKey} = useContext(SearchContext);\n  // eslint-disable-next-line cup/no-undef\n  const [width, setWidth] = useState(window.innerWidth);\n  const [columns, setColumns] = useState(1);\n\n  return (\n    <FullHeightDiv>\n      <SearchDiv>\n        <ButtonIconClose\n          onClick={() => setSearch('')}\n          style={{color: searchKey === '' ? 'white' : 'hotpink'}}\n        >\n          <i className=\"fad fa-times fa-xs\"></i>\n        </ButtonIconClose>\n        <SearchBar autoFocus={true} clear={true} />\n        <ButtonIcon\n          onClick={() => setColumns(1)}\n          style={{color: columns === 1 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th-list fa-lg\"></i>\n        </ButtonIcon>\n        <ButtonIcon\n          onClick={() => setColumns(2)}\n          style={{color: columns === 2 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th-large fa-lg\"></i>\n        </ButtonIcon>\n        <ButtonIcon\n          onClick={() => setColumns(3)}\n          style={{color: columns === 3 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th fa-lg\"></i>\n        </ButtonIcon>\n      </SearchDiv>\n      <Grid\n        key={searchKey}\n        fetchGifs={fetchGifs}\n        noResultsMessage={\n          searchKey === '' ? '' : `No results found for: ${searchKey}`\n        }\n        width={width}\n        columns={columns}\n        gutter={6}\n      />\n      <ResizeObserver\n        onResize={({width}) => {\n          setWidth(width);\n        }}\n      />\n    </FullHeightDiv>\n  );\n};\n\n// the search experience consists of the manager and its child components that use SearchContext\nconst GiphySearch = props => {\n  return (\n    <SearchContextManager apiKey={'CdRKiCMbTnt9CkZTZ0lGukSczk6iT4Z6'}>\n      <Components />\n    </SearchContextManager>\n  );\n};\n\nexport default GiphySearch;\n","// @flow\nimport React from 'react';\nimport {NotFound} from 'fusion-plugin-react-router';\n\nconst PageNotFound = () => (\n  <NotFound>\n    <div>404</div>\n  </NotFound>\n);\n\nexport default PageNotFound;\n","// @flow\nimport React from 'react';\nimport {Route, Switch} from 'fusion-plugin-react-router';\nimport GiphySearch from './pages/giphy.js';\nimport PageNotFound from './pages/pageNotFound.js';\n\nconst root = (\n  <Switch>\n    <Route exact path=\"/\" component={GiphySearch} />\n    <Route component={PageNotFound} />\n  </Switch>\n);\n\nexport default root;\n","/* (ignored) */"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AATA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAGA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;A","sourceRoot":""}