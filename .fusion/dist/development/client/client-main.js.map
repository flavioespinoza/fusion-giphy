{"version":3,"file":"client-main.js","sources":["/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/main.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/pages/giphy.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/pages/home.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/pages/pageNotFound.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/src/root.js","/Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/ignored /Users/flavio/go/src/github.com/flavioespinoza/fusion-giphy/node_modules/side-channel/node_modules/object-inspect ./util.inspect"],"sourcesContent":["// @flow\nimport App from 'fusion-react';\nimport Router from 'fusion-plugin-react-router';\nimport Styletron from 'fusion-plugin-styletron-react';\nimport {RenderToken} from 'fusion-core';\n\nimport root from './root.js';\n\nexport default () => {\n  const app = new App(root);\n  app.register(Styletron);\n  app.register(Router);\n  __NODE__ && app.register(RenderToken, () => \"<div id='root'></div>\");\n  return app;\n};\n","// @flow\nimport React, {useContext, useState} from 'react';\nimport {styled} from 'fusion-plugin-styletron-react';\nimport {\n  Grid, // our UI Component to display the results\n  SearchBar, // the search bar the user will type into\n  SearchContext, // the context that wraps and connects our components\n  SearchContextManager, // the context manager, includes the Context.Provider\n} from '@giphy/react-components';\nimport ResizeObserver from 'react-resize-observer';\n\nconst FullHeightDiv = styled('div', {\n  height: '100%',\n  backgroundColor: '#FFFFFF',\n});\n\nconst SearchDiv = styled('div', {\n  display: 'grid',\n  gridTemplateColumns: '9fr 1fr 1fr 1fr',\n  borderBottom: '1px solid gainsboro',\n});\n\nconst ButtonIcon = styled('button', {\n  backgroundColor: 'transparent',\n  border: 'none',\n  cursor: 'pointer',\n});\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n  const {fetchGifs, searchKey} = useContext(SearchContext);\n  // eslint-disable-next-line cup/no-undef\n  const [width, setWidth] = useState(window.innerWidth);\n  const [columns, setColumns] = useState(1);\n  return (\n    <FullHeightDiv>\n      <SearchDiv>\n        <SearchBar />\n        <ButtonIcon\n          onClick={() => setColumns(1)}\n          style={{color: columns === 1 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th-list fa-lg\"></i>\n        </ButtonIcon>\n        <ButtonIcon\n          onClick={() => setColumns(2)}\n          style={{color: columns === 2 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th-large fa-lg\"></i>\n        </ButtonIcon>\n        <ButtonIcon\n          onClick={() => setColumns(3)}\n          style={{color: columns === 3 ? 'hotpink' : ''}}\n        >\n          <i className=\"fad fa-th fa-lg\"></i>\n        </ButtonIcon>\n      </SearchDiv>\n      <Grid\n        key={searchKey}\n        fetchGifs={fetchGifs}\n        width={width}\n        columns={columns}\n        gutter={6}\n      />\n      <ResizeObserver\n        onResize={({width}) => {\n          setWidth(width);\n        }}\n      />\n    </FullHeightDiv>\n  );\n};\n\n// the search experience consists of the manager and its child components that use SearchContext\nconst GiphySearch = props => {\n  return (\n    <SearchContextManager apiKey={'CdRKiCMbTnt9CkZTZ0lGukSczk6iT4Z6'}>\n      <Components />\n    </SearchContextManager>\n  );\n};\n\nexport default GiphySearch;\n","// @flow\nimport React from 'react';\nimport {styled} from 'fusion-plugin-styletron-react';\n\nconst Center = styled('div', {\n  fontFamily: 'HelveticaNeue-Light, Arial',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n});\n\nconst FusionStyle = styled('div', {\n  fontSize: '80px',\n  color: 'rgba(0,0,0,.8)',\n  paddingRight: '30px',\n  display: 'flex',\n});\n\nconst FullHeightDiv = styled('div', {\n  height: '100%',\n  backgroundColor: '#FFFFFF',\n});\n\nconst Circle = styled('div', {\n  height: '180px',\n  width: '180px',\n  marginTop: '20px',\n  backgroundColor: 'white',\n  ':hover': {backgroundColor: '#f0f8fa'},\n  border: '10px solid #4db5d9',\n  borderRadius: '50%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst GettingStartedLink = styled('a', {\n  textDecoration: 'none',\n  color: '#4db5d9',\n  fontSize: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  textAlign: 'center',\n  height: '100%',\n});\n\nconst Home = () => (\n  <FullHeightDiv>\n    <style>\n      {`\n        html,body,#root{height:100%;}\n        html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}\n        body{margin:0;}\n        button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}\n        input::-webkit-inner-spin-button,input::-webkit-outer-spin-button,input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}\n        `}\n    </style>\n    <Center>\n      <FusionStyle>Fusion.js</FusionStyle>\n      <Center>\n        <Circle>\n          <GettingStartedLink href=\"https://fusionjs.com/docs/overview\">\n            Let&apos;s Get Started\n          </GettingStartedLink>\n        </Circle>\n      </Center>\n    </Center>\n  </FullHeightDiv>\n);\n\nexport default Home;\n","// @flow\nimport React from 'react';\nimport {NotFound} from 'fusion-plugin-react-router';\n\nconst PageNotFound = () => (\n  <NotFound>\n    <div>404</div>\n  </NotFound>\n);\n\nexport default PageNotFound;\n","// @flow\nimport React from 'react';\nimport {Route, Switch} from 'fusion-plugin-react-router';\nimport Home from './pages/home.js';\nimport GiphySearch from './pages/giphy.js';\nimport PageNotFound from './pages/pageNotFound.js';\n\nconst root = (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/giphy-search\" component={GiphySearch} />\n    <Route component={PageNotFound} />\n  </Switch>\n);\n\nexport default root;\n","/* (ignored) */"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AACA;AACA;AAHA;AAOA;AACA;AARA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;AClFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;;;A","sourceRoot":""}